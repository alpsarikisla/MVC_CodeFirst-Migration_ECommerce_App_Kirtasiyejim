@model KirtasiyejimWebApp.Models.Product
@{
    ViewBag.Title = "Ürün Düzenle";
    Layout = "~/Areas/AdminManagerPanel/Views/Shared/_LayoutPage1.cshtml";
}


<div class="box">
    <div class="title">
        @*<a href="@Url.Action("Create","Category")" class="eklebutton">+ Ekle</a>*@
        <h3>Ürünler <small style="font-weight:100"> Ürün Düzenle</small></h3>
        @*<div style="clear:both"></div>*@
    </div>
    <div class="content">
        @using (Html.BeginForm())
        {
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.IsDeleted)
            if (ViewBag.hata != null)
            {
                <div class="pnl_hata">
                    @ViewBag.hata
                </div>
            }
            if (ViewBag.basarili != null)
            {
                <div class="pnl_basarili">
                    @ViewBag.basarili
                </div>
            }
            <div class="sag">
                <div class="row">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "formLabel" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "formTextbox" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "formValidationText" })
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.Category_ID, htmlAttributes: new { @class = "formLabel" })
                    @Html.DropDownList("Category_ID", null, htmlAttributes: new { @class = "formTextbox" })
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.Brand_ID, htmlAttributes: new { @class = "formLabel" })
                    @Html.DropDownList("Brand_ID", null, htmlAttributes: new { @class = "formTextbox" })
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "formLabel" })
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "formTextbox" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "formValidationText" })
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "formLabel" })
                    @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "formTextbox" } })
                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "formValidationText" })
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "formLabel" })
                    @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "formCheckBox" } }) Aktif Ürün<small> (Eğer Seçilirse ürün yayınlanır)</small>
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "formValidationText" })
                </div>
            </div>
            <div class="sol">
                <div class="row">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "formLabel" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "formTextbox" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "formValidationText" })
                </div>
            </div>
            <div style="clear:both"></div>

            <div class="row">
                <button type="submit" class="submitButton">Ürün Düzenle</button><a href="@Url.Action("Index","Product")" class="backButton">Ürünler listesine dön</a>
            </div>
        }
    </div>
</div>


